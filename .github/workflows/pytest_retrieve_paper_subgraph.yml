name: RetrievePaperSubgraph

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths: [
      'src/airas/retrieve/retrieve_paper_subgraph/**',
      'tests/integration/retrieve/retrieve_paper_subgraph.py',
      'tests/unit/retrieve/retrieve_paper_subgraph/**',
      '.github/workflows/pytest_retrieve_paper_subgraph.yml'
    ]

defaults:
  run:
    shell: bash

jobs:
  test-retrieve-paper-subgraph:
    name: RetrievePaperSubgraph Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - test_name: arxiv_api_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_arxiv_api_node.py
          - test_name: extract_github_url_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_extract_github_url_node.py
          - test_name: extract_paper_title_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_extract_paper_title_node.py
          - test_name: generate_queries_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_generate_queries_node.py
          - test_name: retrieve_arxiv_text_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_retrieve_arxiv_text_node.py
          - test_name: select_best_paper_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_select_best_paper_node.py
          - test_name: summarize_paper_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_summarize_paper_node.py
          - test_name: web_scrape_node
            test_file: tests/unit/retrieve/retrieve_paper_subgraph/test_web_scrape_node.py
          - test_name: integration_test_for_retrieve_paper_subgraph
            test_file: tests/integration/retrieve/test_retrieve_paper_subgraph.py
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
      SAVE_DIR: ${{ github.workspace }}/save_dir
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1
          uv --version
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
      - name: Run pytest with coverage
        run: uv run pytest --cov=airas.retrieve_paper_subgraph --cov-branch --cov-report=term-missing -v ${{ matrix.test_file }}
      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip
