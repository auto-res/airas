name: ResearchGraph Nodes Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths: [
      'src/researchgraph/nodes/**', 
      'test/**',
      '.github/workflows/pytest.yml'
      ]

defaults:
  run:
    shell: bash

jobs:
  test-llmnodes:
    name: Test of LLMNodes
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"

      - name: Run pytest
        run: uv run pytest test/test_llmnodes.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip


  test-retrievenodes:
    name: Test of RetrieveNodes
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/test_retrievenodes.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-writingnode:
    name: Test of WritingNodes
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install LaTeX dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y texlive-base texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra texlive-science chktex

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest -s test/test_writingnode.py

      - name: Upload PDF Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs
          path: ${{ env.SAVE_DIR }}/*.pdf

      - name: Verify PDF generation
        run: ls ${{ env.SAVE_DIR }}

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-semanticscholarnode:
    name: Test of SemanticScholarNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
      S2_API_Key: ${{ secrets.S2_API_Key }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/test_semantic_scholar.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-openalexnode:
    name: Test of OpenAlexNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/test_openalex.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-test2scriptnodes:
    name: Test of Text2ScriptNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/test_text2scriptnode.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-codingnoe:
    name: Test of AiderNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/test_codingnodes.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip
