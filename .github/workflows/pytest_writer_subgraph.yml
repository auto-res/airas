name: ResearchGraph WriterSubgraph Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths: [
      'src/researchgraph/writer_subgraph/**', 
      'test/writer_subgraph/**',
      '.github/workflows/pytest_writer_subgraph.yml'
      ]

defaults:
  run:
    shell: bash

job:
  test-writeup-node:
    name: Test of WriteupNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest -s test/writer_subgraph/writer_subgraph/test_writeup_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip  

  test-latexnode:
    name: Test of LatexNode
    runs-on: ubuntu-latest
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
      SAVE_DIR: ${{ github.workspace }}/data
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install LaTeX dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y texlive-base texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra texlive-science chktex   

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR

      - name: Create images directory and dummy image
        run: |
          mkdir -p ${{ env.GITHUB_WORKSPACE }}/images
          touch ${{ env.GITHUB_WORKSPACE }}/images/generated_images.png
        
      - name: Run pytest with coverage
        run: uv run pytest --cov=src --cov-branch --cov-report=xml -s test/writer_subgraph/writer_subgraph/test_latexnode.py

      - name: Upload PDF Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs
          path: ${{ env.SAVE_DIR }}/*.pdf

      - name: Verify PDF generation
        run: ls ${{ env.SAVE_DIR }}

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-github-upload-node:
    name: Test of GithubUploadNode
    runs-on: ubuntu-latest
    env:
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Print PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH"
        
      - name: Create Directory
        run: mkdir -p $SAVE_DIR
        
      - name: Run pytest
        run: uv run pytest test/writer_subgraph/test_github_upload_node.py

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip

  test-writer-subgraph:
    name: Test of WriterSubgraph
    runs-on: ubuntu-latest
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
      SAVE_DIR: ${{ github.workspace }}/save_dir
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install LaTeX dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y texlive-base texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra texlive-science chktex

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/0.5.5/install.sh | bash || exit 1

      - name: Verify uv installation
        run: uv --version

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Create Directory
        run: mkdir -p $SAVE_DIR

      - name: Create images directory and dummy image
        run: |
          mkdir -p ${{ env.GITHUB_WORKSPACE }}/images
          touch ${{ env.GITHUB_WORKSPACE }}/images/generated_images.png
        
      - name: Run pytest
        run: uv run pytest -s test/writer_subgraph/test_writer_subgraph.py

      - name: Upload PDF Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs
          path: ${{ env.SAVE_DIR }}/*.pdf

      - name: Verify PDF generation
        run: ls ${{ env.SAVE_DIR }}

      - name: Ensure pip cache folder exists
        run: mkdir -p /home/runner/.cache/pip